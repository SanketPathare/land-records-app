import { PDFDocument, StandardFonts, rgb } from 'pdf-lib';

export async function generatePdf(record: any): Promise<Uint8Array> {
  const pdfDoc = await PDFDocument.create();
  const page = pdfDoc.addPage([600, 800]);
  const { width, height } = page.getSize();
  const margin = 50;
  
  const font = await pdfDoc.embedFont(StandardFonts.Helvetica);
  const boldFont = await pdfDoc.embedFont(StandardFonts.HelveticaBold);
  
  let y = height - margin;
  
  // Title
  page.drawText('Land Record Report', {
    x: margin,
    y,
    size: 24,
    font: boldFont,
    color: rgb(0, 0.2, 0.4),
  });
  y -= 40;
  
  // Property Information
  page.drawText('Property Information:', {
    x: margin,
    y,
    size: 18,
    font: boldFont,
    color: rgb(0, 0, 0),
  });
  y -= 30;
  
  const propertyInfo = [
    `Property ID: ${record.propertyId}`,
    `Owner: ${record.ownerName}`,
    `Address: ${record.address}`,
    `Parcel Number: ${record.parcelNumber}`,
    `Acreage: ${record.acreage}`,
    `Legal Description: ${record.legalDescription}`,
    `Recorded Date: ${record.recordedDate}`,
  ];
  
  propertyInfo.forEach(line => {
    page.drawText(line, {
      x: margin,
      y,
      size: 12,
      font,
      color: rgb(0, 0, 0),
    });
    y -= 20;
  });
  
  y -= 20;
  
  // Sale History
  if (record.saleHistory && record.saleHistory.length > 0) {
    page.drawText('Sale History:', {
      x: margin,
      y,
      size: 18,
      font: boldFont,
      color: rgb(0, 0, 0),
    });
    y -= 30;
      // @ts-ignore
    record.saleHistory.forEach(sale => {
      page.drawText(`${sale.date}: Sold to ${sale.buyer} for $${sale.price.toLocaleString()}`, {
        x: margin + 20,
        y,
        size: 12,
        font,
        color: rgb(0, 0, 0),
      });
      y -= 20;
    });
    
    y -= 20;
  }
  
  // Liens
  if (record.liens && record.liens.length > 0) {
    page.drawText('Liens:', {
      x: margin,
      y,
      size: 18,
      font: boldFont,
      color: rgb(0, 0, 0),
    });
    y -= 30;
      // @ts-ignore
    record.liens.forEach(lien => {
      page.drawText(`${lien.type}: $${lien.amount.toLocaleString()} (Recorded ${lien.recordedDate})`, {
        x: margin + 20,
        y,
        size: 12,
        font,
        color: rgb(0, 0, 0),
      });
      y -= 20;
    });
    
    y -= 20;
  }
  
  // Taxes
  if (record.taxes && record.taxes.length > 0) {
    page.drawText('Tax Information:', {
      x: margin,
      y,
      size: 18,
      font: boldFont,
      color: rgb(0, 0, 0),
    });
    y -= 30;
      // @ts-ignore
    record.taxes.forEach(tax => {
      page.drawText(`${tax.year}: $${tax.amount.toLocaleString()} (${tax.paid ? 'Paid' : 'Unpaid'})`, {
        x: margin + 20,
        y,
        size: 12,
        font,
        color: rgb(0, 0, 0),
      });
      y -= 20;
    });
  }
  
  // Footer
  page.drawText('Generated by Land Records System', {
    x: margin,
    y: 30,
    size: 10,
    font,
    color: rgb(0.5, 0.5, 0.5),
  });
  
  return await pdfDoc.save();
}